@page "/add-category"
@implements IDisposable

<div class="container">
    <div class="row">
        <EditForm Model="CategoryModel" Enhance OnValidSubmit="HandleSaveCategory">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <div class="card">
                <div class="card-header">Add Category</div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Name</label>
                        <InputText class="form-control" @bind-Value="CategoryModel.Name"></InputText>
                    </div>
                </div

                <div class="card-footer">
                    <div class="form-group mt-3">
                        @if(messageDialogService.ShowSaveButton)
                        {
                            <button type="submit" class="btn btn-outline-primary">
                                <i class="fa fa-plus"></i> Save Category
                            </button>
                        }
                        <BusyButtonComponent ShowBusyButton="messageDialogService.ShowBusyButton"></BusyButtonComponent>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>    
</div>

<MessageDialog @ref="messageDialogService.messageDialog"></MessageDialog>
@code {
    Category CategoryModel = new();

    protected override void OnInitialized()
    {
        messageDialogService.Action += StateHasChanged;
    }

    async Task  HandleSaveCategory()
    {
        messageDialogService.ShowSaveButton = false;
        messageDialogService.ShowBusyButton = !messageDialogService.ShowSaveButton;

        var(flag,message) = await CategoryService.AddCategory(CategoryModel);
        if (flag)
            messageDialogService.messageDialog!.SetDialogValues("Success", message);
        else
            messageDialogService.messageDialog!.SetDialogValues("Danger", message);

        messageDialogService.SetMessageDialog();
        return;
    }

    public void Dispose()
    {
        messageDialogService.Action -= StateHasChanged;
    }
}